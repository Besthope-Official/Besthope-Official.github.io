<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Besthope&#39;s Blog</title>
  <icon>http://example.com/icon.png</icon>
  <subtitle>more than a tech blog :)</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-05T04:09:04.605Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Besthope</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计组考前复习</title>
    <link href="http://example.com/2024/01/02/%E8%AE%A1%E7%BB%84%E8%80%83%E5%89%8D%E5%A4%8D%E4%B9%A0/"/>
    <id>http://example.com/2024/01/02/%E8%AE%A1%E7%BB%84%E8%80%83%E5%89%8D%E5%A4%8D%E4%B9%A0/</id>
    <published>2024-01-02T02:49:29.000Z</published>
    <updated>2024-01-05T04:09:04.605Z</updated>
    
    
    <summary type="html">&lt;p&gt;其实应该叫 ICS, 计算机系统基础复习, 但这门课下次就改名了,
教材也选用的是计组(谭志虎, 是好书)的, 我不好说.&lt;/p&gt;
&lt;p&gt;明明不做配套的实验, 让学生干瞪数字电路多少有些抽象.
而且大部分时间讲的还是前半部分...求求改考 CSAPP 吧, 我什么都会做的.&lt;/p&gt;
&lt;p&gt;upd: 没复习的三章考了 40 多分, 自己觉得重要的部分忘了差不多,
等死.&lt;/p&gt;</summary>
    
    
    
    <category term="复习" scheme="http://example.com/categories/%E5%A4%8D%E4%B9%A0/"/>
    
    
    <category term="计算机系统" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>2023年终总结</title>
    <link href="http://example.com/2023/12/30/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2023/12/30/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2023-12-30T15:22:28.000Z</published>
    <updated>2023-12-30T16:30:09.539Z</updated>
    
    
    <summary type="html">&lt;p&gt;又到了一年一度的年终鱼鱼时间... 我给 2023 的关键字是「安」。安逸地吃,
安稳地过, 随遇而安的心态. 烦心的, 讨厌的, 现在回想起来都无足轻重,
已经写在记忆的纸筝上, 放飞到远方了.&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="http://example.com/tags/%E6%9D%82%E8%B0%88/"/>
    
    <category term="年终总结" scheme="http://example.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的数据分析</title>
    <link href="http://example.com/2023/10/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2023/10/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</id>
    <published>2023-10-26T04:50:33.000Z</published>
    <updated>2023-12-30T15:21:35.668Z</updated>
    
    
    <summary type="html">&lt;p&gt;从零开始的数据分析!&lt;/p&gt;
&lt;p&gt;为啥开这个坑? 第一, 这学期上了这门课, 但感觉教授的内容好浅.
想要在这个领域多扩展些知识. 第二,
后端发展路线上确实有对数据分析的一点要求, 就当是提升自己的硬实力.
别的不说, 这门课是和量化交易相对而言最接近的课.&lt;/p&gt;
&lt;p&gt;最后一点, 我是算法竞赛败犬. Regional Cu, Fe 屁用没有, 思来索去,
得出了一个观点: 卷不动 XCPC 那就赶紧跑路 (bushi&lt;a href=&quot;#fn1&quot;
class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Python 数据分析" scheme="http://example.com/tags/Python-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>我的刷题日记</title>
    <link href="http://example.com/2023/09/25/%E4%B9%9D%E6%9C%88%E4%BD%A0%E5%88%B7%E9%A2%98%E4%BA%86%E5%90%97/"/>
    <id>http://example.com/2023/09/25/%E4%B9%9D%E6%9C%88%E4%BD%A0%E5%88%B7%E9%A2%98%E4%BA%86%E5%90%97/</id>
    <published>2023-09-25T13:47:48.000Z</published>
    <updated>2023-12-06T07:30:34.121Z</updated>
    
    
    <summary type="html">&lt;p&gt;悲报: 要去 CCPC 桂林赛区坐牢了.&lt;/p&gt;
&lt;p&gt;校赛被队友带飞了, 身不由己, 现在希望自己要打出点成绩不要太丢脸.
从今天开始高强度刷题. Codeforces Div 1/2 一题不落, Atcoder ABC 狠狠开刷,
区域赛的 vp 狠狠开打...&lt;/p&gt;
&lt;p&gt;就看看我又没有恒心做到日更了, 不管怎的先开个究极大坑在这里.&lt;/p&gt;
&lt;p&gt;UPD: 是我想多了. 不过 11 月还有校赛, 狠狠练习&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Python OOP Cookbook</title>
    <link href="http://example.com/2023/09/25/Python-OOP/"/>
    <id>http://example.com/2023/09/25/Python-OOP/</id>
    <published>2023-09-25T02:40:25.000Z</published>
    <updated>2023-09-26T12:05:15.274Z</updated>
    
    
    <summary type="html">&lt;p&gt;学习数据结构一个重要的点是&lt;strong&gt;数据抽象&lt;/strong&gt;, 也是计算机人毕生所追求的理念: 将现实世界的问题抽象成形式语言, 变为&lt;em&gt;计算机可读&lt;/em&gt;的数据. 这种数据的组织结构, 在&lt;em&gt;面向对象编程&lt;/em&gt;(&lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;O&lt;/strong&gt;riented &lt;strong&gt;P&lt;/strong&gt;rogramming)范式中, 被抽象成一个&lt;strong&gt;类&lt;/strong&gt;, 这也是 OOP 的核心.&lt;/p&gt;
&lt;p&gt;Python 的 OOP 和其它语言有些细微的差距, 但是 Python 本身作为一门 OOP 语言, 自然在机制的实现上不输他者. 正好这学期的 DSA 拿 Python 教学, 正好也想更系统地学习 OOP, 遂有了这篇文章的产生.&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>日常刷题</title>
    <link href="http://example.com/2023/08/31/%E6%97%A5%E5%B8%B8%E5%88%B7%E9%A2%98/"/>
    <id>http://example.com/2023/08/31/%E6%97%A5%E5%B8%B8%E5%88%B7%E9%A2%98/</id>
    <published>2023-08-31T11:55:08.000Z</published>
    <updated>2023-09-16T13:09:01.829Z</updated>
    
    
    <summary type="html">&lt;p&gt;要开学了, 挣扎下. 17 号就要打 ICPC 的网络赛了,
到时候为了不太难看(队伍里有佬带飞qwq)就稍微做点题目.&lt;/p&gt;
&lt;p&gt;如果进了区域赛, 那就得狠狠地锻炼了...&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>杭电暑期训练</title>
    <link href="http://example.com/2023/07/19/%E6%9D%AD%E7%94%B5%E6%9A%91%E6%9C%9F%E8%AE%AD%E7%BB%83/"/>
    <id>http://example.com/2023/07/19/%E6%9D%AD%E7%94%B5%E6%9A%91%E6%9C%9F%E8%AE%AD%E7%BB%83/</id>
    <published>2023-07-19T05:20:11.000Z</published>
    <updated>2023-08-04T14:22:25.732Z</updated>
    
    
    <summary type="html">&lt;p&gt;补点杭电暑期训练营的题目.&lt;/p&gt;
&lt;p&gt;菜比不如去补点 CF 上的思维模拟题, 或者跟着闫总做题去. 给自己的任务:
做出签到题就是胜利. 银牌题怕是这辈子也做不出了. 8.22 就是 CCPC 的网络赛,
估计到时候要被川内其他学校薄纱.&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Effective-GDB!</title>
    <link href="http://example.com/2023/06/27/Effective-GDB/"/>
    <id>http://example.com/2023/06/27/Effective-GDB/</id>
    <published>2023-06-27T02:31:00.000Z</published>
    <updated>2023-06-27T03:26:51.685Z</updated>
    
    
    <summary type="html">&lt;p&gt;真的有人会用 GDB 调试吗? 是旧朝遗老显摆, 还是没事找事? IDE 的
Debugger 不好用吗...&lt;/p&gt;
&lt;p&gt;估计做完CSAPP的Lab就把GDB丢掉了, 或者在OS作业里耍耍, 又或者去打CTF了,
别的想不到 GDB 能干什么了, 吗?&lt;/p&gt;
&lt;p&gt;可能你没有了解完全 GDB 可以做的一切. 你可能觉得 GDB 一点也不直观,
那为什么不试试 TUI; 你可能觉得反复键入指令太麻烦, 为什么不用 Python
写脚本...&lt;/p&gt;
&lt;p&gt;不过话又说回来, 学习 GDB, 其实学习更主要, 学会调试的技巧,
总会在未来的某一天帮助到你.&lt;/p&gt;</summary>
    
    
    
    <category term="调试" scheme="http://example.com/categories/%E8%B0%83%E8%AF%95/"/>
    
    
    <category term="GDB" scheme="http://example.com/tags/GDB/"/>
    
    <category term="调试" scheme="http://example.com/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>离散考前挣扎</title>
    <link href="http://example.com/2023/06/12/%E7%A6%BB%E6%95%A3%E8%80%83%E5%89%8D%E6%8C%A3%E6%89%8E/"/>
    <id>http://example.com/2023/06/12/%E7%A6%BB%E6%95%A3%E8%80%83%E5%89%8D%E6%8C%A3%E6%89%8E/</id>
    <published>2023-06-12T06:09:54.000Z</published>
    <updated>2024-01-02T02:50:06.547Z</updated>
    
    
    <summary type="html">&lt;p&gt;考前的最后挣扎. 全是题目, 不再一五一十地复习基本概念了,
会做题和懂数学是两码事, 时间该留到平时钻研.&lt;/p&gt;
&lt;p&gt;说实话这学期的离散学的内容还是太松散了. 数理逻辑, 关系代数, 图论,
然后没了. 我觉得这门课改成 Introduction to Discrete Mathematics
可能更合适. 隔壁 UESTC 同一本教材讲得明显比咱好, NJU
的佬问我问题一查大半天, 惭愧.&lt;/p&gt;
&lt;p&gt;总结一下往年的试卷和作业试题. 总的来说还是很简单的.
其实我还有一个习题集, 但那个超纲很多, 说不定哪天合并一下.&lt;/p&gt;</summary>
    
    
    
    <category term="离散数学" scheme="http://example.com/categories/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="离散数学" scheme="http://example.com/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
    <category term="证明" scheme="http://example.com/tags/%E8%AF%81%E6%98%8E/"/>
    
    <category term="复习" scheme="http://example.com/tags/%E5%A4%8D%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>SQL cheetsheet</title>
    <link href="http://example.com/2023/05/16/SQL-cheetsheet/"/>
    <id>http://example.com/2023/05/16/SQL-cheetsheet/</id>
    <published>2023-05-16T15:27:40.000Z</published>
    <updated>2023-06-26T07:32:55.224Z</updated>
    
    
    <summary type="html">&lt;p&gt;初步接触 DBMS: 不就是存个数据吗, 有什么难的. 增删改查,
我上我也行.&lt;/p&gt;
&lt;p&gt;进一步了解 DBMS: 好像有点东西&lt;del&gt;(全然余裕)&lt;/del&gt;.&lt;/p&gt;
&lt;p&gt;看完一本 DBMS 的书后: B+树索引结构, 关系模型和外键约束,
连接优化、投影消除...&lt;/p&gt;
&lt;p&gt;记这么多DML作甚? &lt;del&gt;实际还不是用的GUI.&lt;/del&gt;
涉及复杂业务逻辑的时候, 写SQL语句照样烧脑. 设计表的时候还不是照样头疼.
不考虑优化, 结果性能巨差有谁来负责. 没个 Cheatsheet
还真没一下想不出来.&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://example.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="SQL" scheme="http://example.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Flask从入门到入土</title>
    <link href="http://example.com/2023/04/25/Flask%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/"/>
    <id>http://example.com/2023/04/25/Flask%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</id>
    <published>2023-04-25T10:10:59.000Z</published>
    <updated>2023-07-01T15:42:54.428Z</updated>
    
    
    <summary type="html">&lt;p&gt;所谓人生苦短, 我用 Python. 经常戏称别的语言 Python 化, 不就是说明了
Python 作为现代语言的优越性. 当然, 不吹不贬地说, 其实关键在于项目需求,
所以用什么其实并不重要.&lt;/p&gt;
&lt;p&gt;在 Python Web 开发这块, Django 和 Flask 平分天下, 而 Flask
框架的优点就在于它&quot;轻量&quot;, &quot;微&quot;, 简直就是 vscode 的翻版, 靠社区 extension
高效驱动.&lt;/p&gt;
&lt;p&gt;当然, Flask 的使用不局限于 Web 应用的开发, 甚至说,
&lt;strong&gt;作为后端提供接口&lt;/strong&gt;才是发挥它功用的最好做法.
这正是本文要完成的事情!&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Flask" scheme="http://example.com/tags/Flask/"/>
    
    <category term="后端" scheme="http://example.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>搭建一个tiny-docker</title>
    <link href="http://example.com/2023/04/08/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAtiny-docker/"/>
    <id>http://example.com/2023/04/08/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAtiny-docker/</id>
    <published>2023-04-08T11:27:39.000Z</published>
    <updated>2023-04-09T11:14:59.351Z</updated>
    
    
    <summary type="html">&lt;p&gt;怎么理解Docker? 自己手搓一个.&lt;/p&gt;
&lt;p&gt;这不是吹牛, 实际上核心技术就 Kernel 里的 Namespace, CGroup, UnionFS.
实现一个 tiny-docker, 对于了解 OS 也是大有裨益的!&lt;/p&gt;
&lt;p&gt;多说无用, show me the code!&lt;/p&gt;</summary>
    
    
    
    <category term="小项目" scheme="http://example.com/categories/%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="Linux系统编程" scheme="http://example.com/tags/Linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>数理逻辑人话ver</title>
    <link href="http://example.com/2023/03/11/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91%E4%BA%BA%E8%AF%9Dver/"/>
    <id>http://example.com/2023/03/11/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91%E4%BA%BA%E8%AF%9Dver/</id>
    <published>2023-03-11T03:09:39.000Z</published>
    <updated>2023-06-14T11:46:27.720Z</updated>
    
    
    <summary type="html">&lt;p&gt;为了严谨性以及交流方便, 我们需要术语来描述问题: 这很好,
某些问题数学语言胜千言——但由 terminology 组成的句子经常会让人不知所云.
尤其对于数理逻辑, 因为是翻译文字所以句子看起来就更糟心了.
本身不是数学专业, 还要被符号定义纠缠半死. 想要明白问题的核心要义,
非得二次翻译不可, 但最后描述的事情却是显而易见的.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is not what you read, but how you read it.——Richard Feynman&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一切在于你的理解:
是愿意如背古诗一般去背定义——事实上这也足够你做题了——还是&lt;em&gt;真真正正地&lt;/em&gt;去理解所描述的问题?
以及, 为什么要这么定义?&lt;/p&gt;</summary>
    
    
    
    <category term="离散数学" scheme="http://example.com/categories/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="离散数学" scheme="http://example.com/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
    <category term="数理逻辑" scheme="http://example.com/tags/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>综合算法题</title>
    <link href="http://example.com/2023/03/04/%E7%BB%BC%E5%90%88%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    <id>http://example.com/2023/03/04/%E7%BB%BC%E5%90%88%E7%AE%97%E6%B3%95%E9%A2%98/</id>
    <published>2023-03-04T06:36:20.000Z</published>
    <updated>2023-04-23T11:12:49.413Z</updated>
    
    
    <summary type="html">&lt;p&gt;收录一些平时做的比较综合的题目. 考察的知识点不止一点,
各种优化方式简直使出毕生所学.&lt;/p&gt;
&lt;p&gt;大概是蓝桥杯国赛, ACM银, 提高组以上难度, 是比赛你不会轻易去碰的题目,
讲解起来也是额外麻烦. 虽然说比赛能保证签到题全对就已经很了不起了,
但这种题目就像高考数学的压轴题, 还是要有所接触才能有所突破嘛.&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>把Python写成shell脚本</title>
    <link href="http://example.com/2023/02/26/%E6%8A%8APython%E5%86%99%E6%88%90%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2023/02/26/%E6%8A%8APython%E5%86%99%E6%88%90%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/</id>
    <published>2023-02-26T15:34:35.000Z</published>
    <updated>2023-06-12T09:22:29.996Z</updated>
    
    
    <summary type="html">&lt;p&gt;为什么 Shell 脚本要用 Python 来写!? UNIX用户痛骂这是大逆不道.&lt;/p&gt;
&lt;p&gt;比起 BAT/Bash 我更喜欢 Python 的语法, 高效又简洁, 想想看一个list
bash要怎么写. 有 os/sys 模块的存在完全可以把 Python
写成类shell脚本(本质即调用shell命令), 再加上 &lt;code&gt;pandas&lt;/code&gt;
等包更是让 Python 实用到一个新的高度(Windows干活干的多).&lt;/p&gt;
&lt;p&gt;当然, 工具就是顺手就好. 你喜欢用什么写就用什么写.&lt;/p&gt;
&lt;p&gt;不考虑更底层的应用. 别扯什么嵌入式驱动, C语言顶着你的脑门问: 师傅,
我是干什么的.&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>简单的数据结构</title>
    <link href="http://example.com/2023/02/25/%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2023/02/25/%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2023-02-25T15:29:08.000Z</published>
    <updated>2023-12-08T03:04:20.451Z</updated>
    
    
    <summary type="html">&lt;p&gt;做一个数据结构的小小总结. 其实数据结构和算法是不分家的, 例如
&lt;code&gt;1+1=2&lt;/code&gt; 是一个加法算法, 用到了整型的数据结构 &lt;a href=&quot;#fn1&quot;
class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;.
你就说是不是吧.&lt;/p&gt;
&lt;p&gt;DSA课程/书本上更注重实现. 手搓一个泛型结构, 实现 &lt;code&gt;std&lt;/code&gt;
里头的一堆方法, 这不劝退谁劝退. 实现是为了更好理解原理.
不要被复杂的构造带偏了学习的方向! 我们实现的标准是: ANSI C 也能做到!&lt;/p&gt;
&lt;p&gt;剩下的内容: 怎么用STL来解决使用到特定数据结构的题目, i.e. 会做题.
但我们也懂原理!&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>AI时代的学习指南</title>
    <link href="http://example.com/2023/02/25/AI%E6%97%B6%E4%BB%A3%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2023/02/25/AI%E6%97%B6%E4%BB%A3%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</id>
    <published>2023-02-25T12:35:18.000Z</published>
    <updated>2023-06-13T05:31:00.038Z</updated>
    
    
    <summary type="html">&lt;p&gt;日常刷知乎, 然后看到了这样一个问题: &lt;a
href=&quot;https://www.zhihu.com/question/585554274/&quot;&gt;沃顿商学院教授要求学生必须用
ChatGPT 写作业，应该如何正确看待 AI 带来的利弊？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前我也看到一些态度截然相反的高校. 说实在话, 反对历史必然的行为,
无异于杯水车薪, 想想 Luddite movement 也不会真正让我们重回原始社会,
闭关锁国的历史也不必再度经历; 至于使用工具是否会反噬自身,
只要在不侵害他人的利益下, 我想这个自由最好让步于个人,
想想你是怎么注册上了ChatGPT的账号. 最后,
这句话送给AI时代下学习一切的你和我:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;拥抱变化要比拒绝变化简单的多.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="http://example.com/tags/%E6%9D%82%E8%B0%88/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="学习经验" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>保研, 相亲, 找工作——背后的稳定匹配问题</title>
    <link href="http://example.com/2023/02/06/%E7%A8%B3%E5%AE%9A%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98%E5%8F%8AGale-Shapley%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2023/02/06/%E7%A8%B3%E5%AE%9A%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98%E5%8F%8AGale-Shapley%E7%AE%97%E6%B3%95/</id>
    <published>2023-02-06T08:28:11.000Z</published>
    <updated>2023-02-25T16:12:42.761Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;稳定匹配问题&lt;/strong&gt;(Stable Matching Problem)最早出自 D.Gale
和 L.S.Sharpley
1962年发表在美国数学月刊上的一篇关于&lt;em&gt;大学录取和婚姻稳定&lt;/em&gt;的文章&lt;a
href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot;
role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. 解决这个问题的算法出奇地简单,
甚至是&lt;strong&gt;自我执行&lt;/strong&gt;(self-forcing)的——换言之,
不需要系统的调度, 就能获得令人满意的结果!&lt;/p&gt;
&lt;p&gt;本文重点陈述算法的正确性——作为离散数学中&lt;em&gt;逻辑命题与证明&lt;/em&gt;的简单应用.&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="离散数学" scheme="http://example.com/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>随感录</title>
    <link href="http://example.com/2023/01/28/%E9%9A%8F%E6%84%9F%E5%BD%95/"/>
    <id>http://example.com/2023/01/28/%E9%9A%8F%E6%84%9F%E5%BD%95/</id>
    <published>2023-01-28T14:41:17.000Z</published>
    <updated>2023-12-30T15:19:39.410Z</updated>
    
    
    <summary type="html">&lt;p&gt;记录不时的奇思妙想. 奇怪的梦, 无垠的呓语, 似非的感悟.
忙碌后的凝思会带给人宁静, 或许人的创作欲此刻迸发. 胡诌数句,
想想还是删去罢了.&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈" scheme="http://example.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="http://example.com/tags/%E6%9D%82%E8%B0%88/"/>
    
    <category term="小说" scheme="http://example.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>2023寒假每日一题</title>
    <link href="http://example.com/2023/01/14/%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <id>http://example.com/2023/01/14/%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</id>
    <published>2023-01-14T12:45:49.000Z</published>
    <updated>2023-01-31T15:04:35.166Z</updated>
    
    
    <summary type="html">&lt;p&gt;收录一些寒假做的题目. 题目来源: &lt;a
href=&quot;https://www.acwing.com/activity/content/introduction/2712/&quot;&gt;寒假每日一题2023&lt;/a&gt;
我才不是水题大师呢, 因为蒟蒻所以只能做这些入门题,
但实际上更水的题目已经被我筛掉了 (&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="刷题" scheme="http://example.com/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="枚举" scheme="http://example.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="贪心" scheme="http://example.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
    <category term="差分" scheme="http://example.com/tags/%E5%B7%AE%E5%88%86/"/>
    
  </entry>
  
</feed>
